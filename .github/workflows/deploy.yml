name: deploy

on:
  push:
    branches:
      - main
  schedule:
    - cron: "0 0 * * *"

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: shivammathur/setup-php@v2
        with:
          php-version: 8.1
          tools: composer:v2

      - uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.example', '.env');"

      - name: Get Composer Cache Directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-dir)"
      - name: Cache Composer
        uses: actions/cache@v1
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: composer-${{ hashFiles('composer.json') }}
          restore-keys: |
            composer-

      - name: Install Composer Dependencies
        run: composer install --no-ansi --no-interaction --no-scripts --no-suggest --no-progress --prefer-dist

      - name: Get Yarn Cache Directory
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Cache Yarn
        uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: yarn-${{ hashFiles('package.json') }}
          restore-keys: |
            yarn-

      - name: Install Yarn Dependencies
        run: |
          npm config set "@fortawesome:registry" https://npm.fontawesome.com/
          npm config set "//npm.fontawesome.com/:_authToken" ${{ secrets.FONTAWESOME_TOKEN }}
          yarn install

      - name: Mix assets
        run: yarn build

      - name: Export page
        run: php artisan export --env=prod --skip-all
        env:
          GITHUB_ACCESS_TOKEN: ${{ secrets.GH_ACCESS_TOKEN }}
          IMGIX_SIGN_KEY: ${{ secrets.IMGIX_SIGN_KEY }}

      - name: Netlify deploy
        run: |
          yarn global add netlify-cli
          "$(yarn global bin)/netlify" deploy --prod
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
